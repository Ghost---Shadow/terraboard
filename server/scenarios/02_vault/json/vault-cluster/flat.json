{
  "terraform.required_version": ">= 0.9.3",
  "resource.aws_autoscaling_group.autoscaling_group.launch_configuration": "${aws_launch_configuration.launch_configuration.name}",
  "resource.aws_autoscaling_group.autoscaling_group.availability_zones.0": "${var.availability_zones}",
  "resource.aws_autoscaling_group.autoscaling_group.vpc_zone_identifier.0": "${var.subnet_ids}",
  "resource.aws_autoscaling_group.autoscaling_group.min_size": "${var.cluster_size}",
  "resource.aws_autoscaling_group.autoscaling_group.max_size": "${var.cluster_size}",
  "resource.aws_autoscaling_group.autoscaling_group.desired_capacity": "${var.cluster_size}",
  "resource.aws_autoscaling_group.autoscaling_group.termination_policies.0": "${var.termination_policies}",
  "resource.aws_autoscaling_group.autoscaling_group.target_group_arns.0": "${var.target_group_arns}",
  "resource.aws_autoscaling_group.autoscaling_group.load_balancers.0": "${var.load_balancers}",
  "resource.aws_autoscaling_group.autoscaling_group.health_check_type": "${var.health_check_type}",
  "resource.aws_autoscaling_group.autoscaling_group.health_check_grace_period": "${var.health_check_grace_period}",
  "resource.aws_autoscaling_group.autoscaling_group.wait_for_capacity_timeout": "${var.wait_for_capacity_timeout}",
  "resource.aws_autoscaling_group.autoscaling_group.tag.key": "${var.cluster_tag_key}",
  "resource.aws_autoscaling_group.autoscaling_group.tag.value": "${var.cluster_name}",
  "resource.aws_autoscaling_group.autoscaling_group.tag.propagate_at_launch": true,
  "resource.aws_launch_configuration.launch_configuration.name_prefix": "${var.cluster_name}-",
  "resource.aws_launch_configuration.launch_configuration.image_id": "${var.ami_id}",
  "resource.aws_launch_configuration.launch_configuration.instance_type": "${var.instance_type}",
  "resource.aws_launch_configuration.launch_configuration.user_data": "${var.user_data}",
  "resource.aws_launch_configuration.launch_configuration.iam_instance_profile": "${aws_iam_instance_profile.instance_profile.name}",
  "resource.aws_launch_configuration.launch_configuration.key_name": "${var.ssh_key_name}",
  "resource.aws_launch_configuration.launch_configuration.security_groups.0": "${aws_security_group.lc_security_group.id}",
  "resource.aws_launch_configuration.launch_configuration.placement_tenancy": "${var.tenancy}",
  "resource.aws_launch_configuration.launch_configuration.associate_public_ip_address": "${var.associate_public_ip_address}",
  "resource.aws_launch_configuration.launch_configuration.ebs_optimized": "${var.root_volume_ebs_optimized}",
  "resource.aws_launch_configuration.launch_configuration.root_block_device.volume_type": "${var.root_volume_type}",
  "resource.aws_launch_configuration.launch_configuration.root_block_device.volume_size": "${var.root_volume_size}",
  "resource.aws_launch_configuration.launch_configuration.root_block_device.delete_on_termination": "${var.root_volume_delete_on_termination}",
  "resource.aws_launch_configuration.launch_configuration.lifecycle.create_before_destroy": true,
  "resource.aws_security_group.lc_security_group.name_prefix": "${var.cluster_name}",
  "resource.aws_security_group.lc_security_group.description": "Security group for the ${var.cluster_name} launch configuration",
  "resource.aws_security_group.lc_security_group.vpc_id": "${var.vpc_id}",
  "resource.aws_security_group.lc_security_group.lifecycle.create_before_destroy": true,
  "resource.aws_security_group_rule.allow_ssh_inbound_from_cidr_blocks.type": "ingress",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_cidr_blocks.from_port": "${var.ssh_port}",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_cidr_blocks.to_port": "${var.ssh_port}",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_cidr_blocks.protocol": "tcp",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_cidr_blocks.cidr_blocks.0": "${var.allowed_ssh_cidr_blocks}",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_cidr_blocks.security_group_id": "${aws_security_group.lc_security_group.id}",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_security_group_ids.count": "${length(var.allowed_inbound_security_group_ids)}",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_security_group_ids.type": "ingress",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_security_group_ids.from_port": "${var.ssh_port}",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_security_group_ids.to_port": "${var.ssh_port}",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_security_group_ids.protocol": "tcp",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_security_group_ids.source_security_group_id": "${element(var.allowed_inbound_security_group_ids, count.index)}",
  "resource.aws_security_group_rule.allow_ssh_inbound_from_security_group_ids.security_group_id": "${aws_security_group.lc_security_group.id}",
  "resource.aws_security_group_rule.allow_all_outbound.type": "egress",
  "resource.aws_security_group_rule.allow_all_outbound.from_port": 0,
  "resource.aws_security_group_rule.allow_all_outbound.to_port": 0,
  "resource.aws_security_group_rule.allow_all_outbound.protocol": "-1",
  "resource.aws_security_group_rule.allow_all_outbound.cidr_blocks.0": "0.0.0.0/0",
  "resource.aws_security_group_rule.allow_all_outbound.security_group_id": "${aws_security_group.lc_security_group.id}",
  "resource.aws_iam_instance_profile.instance_profile.name_prefix": "${var.cluster_name}",
  "resource.aws_iam_instance_profile.instance_profile.path": "${var.instance_profile_path}",
  "resource.aws_iam_instance_profile.instance_profile.role": "${aws_iam_role.instance_role.name}",
  "resource.aws_iam_instance_profile.instance_profile.lifecycle.create_before_destroy": true,
  "resource.aws_iam_role.instance_role.name_prefix": "${var.cluster_name}",
  "resource.aws_iam_role.instance_role.assume_role_policy": "${data.aws_iam_policy_document.instance_role.json}",
  "resource.aws_iam_role.instance_role.lifecycle.create_before_destroy": true,
  "resource.aws_s3_bucket.vault_storage.bucket": "${var.s3_bucket_name}",
  "resource.aws_s3_bucket.vault_storage.force_destroy": "${var.force_destroy_s3_bucket}",
  "resource.aws_s3_bucket.vault_storage.tags.Description": "Used for secret storage with Vault. DO NOT DELETE this Bucket unless you know what you are doing.",
  "resource.aws_iam_role_policy.vault_s3.name": "vault_s3",
  "resource.aws_iam_role_policy.vault_s3.role": "${aws_iam_role.instance_role.id}",
  "resource.aws_iam_role_policy.vault_s3.policy": "${data.aws_iam_policy_document.vault_s3.json}",
  "module.security_group_rules.source": "../vault-security-group-rules",
  "module.security_group_rules.security_group_id": "${aws_security_group.lc_security_group.id}",
  "module.security_group_rules.allowed_inbound_cidr_blocks.0": "${var.allowed_inbound_cidr_blocks}",
  "module.security_group_rules.allowed_inbound_security_group_ids.0": "${var.allowed_inbound_security_group_ids}",
  "module.security_group_rules.api_port": "${var.api_port}",
  "module.security_group_rules.cluster_port": "${var.cluster_port}",
  "data.aws_iam_policy_document.instance_role.statement.effect": "Allow",
  "data.aws_iam_policy_document.instance_role.statement.actions.0": "sts:AssumeRole",
  "data.aws_iam_policy_document.instance_role.statement.principals.type": "Service",
  "data.aws_iam_policy_document.instance_role.statement.principals.identifiers.0": "ec2.amazonaws.com",
  "data.aws_iam_policy_document.vault_s3.statement.effect": "Allow",
  "data.aws_iam_policy_document.vault_s3.statement.actions.0": "s3:*",
  "data.aws_iam_policy_document.vault_s3.statement.resources.0": "${aws_s3_bucket.vault_storage.arn}",
  "data.aws_iam_policy_document.vault_s3.statement.resources.1": "${aws_s3_bucket.vault_storage.arn}/*"
}